language: c
#sudo: required
dist: trusty
env:
    - CMAKE_FLAGS="-Denable-profiling=1"
    - CMAKE_FLAGS="-Denable-floats=1 -Denable-profiling=1"
    - CMAKE_FLAGS="-Denable-trap-on-fpe=1"
    - CMAKE_FLAGS="-Denable-fpe-check=1"
    - CMAKE_FLAGS="-Denable-debug=1"
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - cmake-data
            - cmake
            - libglib2.0-0
            - libsndfile-dev
            - libasound2-dev
            - libjack-dev
            - portaudio19-dev
            - libpulse-dev
            - libdbus-glib-1-dev
      env:
         - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
         - CMAKE_FLAGS="-Denable-floats=1"
         
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - cmake-data
            - cmake
            - libglib2.0-0
            - libsndfile-dev
            - libasound2-dev
            - libjack-dev
            - portaudio19-dev
            - libpulse-dev
            - libdbus-glib-1-dev
      env:
         - MATRIX_EVAL="CC=gcc-4.8 && CXX=g++-4.8"
         - CMAKE_FLAGS="-Denable-floats=0"
         
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - cmake-data
            - cmake
            - libglib2.0-0
      env:
         - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake-data
            - cmake
            - libglib2.0-0
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - cmake-data
            - cmake
            - libglib2.0-0
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    # works on Precise and Trusty
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
            - george-edison55-precise-backports
          packages:
            - clang-3.8
            - cmake-data
            - cmake
            - libglib2.0-0
      env:
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
            - george-edison55-precise-backports
          packages:
            - clang-3.9
            - cmake-data
            - cmake
            - libglib2.0-0
      env:
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"

    # works on Trusty
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - george-edison55-precise-backports
          packages:
            - clang-4.0
            - cmake-data
            - cmake
            - libglib2.0-0
      env:
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"

    ## works on Trusty
    #- os: linux
      #addons:
        #apt:
          #sources:
            #- llvm-toolchain-trusty
            #- george-edison55-precise-backports
          #packages:
            #- clang-5.0
            #- cmake-data
            #- cmake
            #- libglib2.0-0
      #env:
        #- MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    
    #- os: osx
      #osx_image: xcode8
      #env:
        #- MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    #- os: osx
      #osx_image: xcode8
      #env:
        #- MATRIX_EVAL="brew install gcc5 && CC=gcc-5 && CXX=g++-5"

    #- os: osx
      #osx_image: xcode8
      #env:
        #- MATRIX_EVAL="brew install gcc && CC=gcc-6 && CXX=g++-6"

before_install:
    - eval "${MATRIX_EVAL}"
    
before_script:
    - mkdir build && cd build
    
script:
    - cmake ${CMAKE_FLAGS} "-DCMAKE_BUILD_TYPE=RelWithDebInfo" ..
    - make -j4
